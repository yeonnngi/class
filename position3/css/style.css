@charset "UTF-8";
/*한글이 안깨지게 하는 것 반드시 세미콜론;으로 마무리!*/

* {
    margin: 0;
    padding: 0;
}/* 예측하지 못한 바깥영역과 안영역 없애기 최소화 */

ul,ol,li{list-style: none;} /* 리스트 스타일 초기화 */

.clear::after{
    content: "";
    clear: both;
    display: block;
}

/* id의 경우 #으로 작성 */
#전체 {
    background-color: orange;
    padding: 20px;
    width: 800px;
    margin: 0 auto; /* 마진을 중앙으로 맞추겠다 */
}

#전체 .첫째자식 {
    background-color: chartreuse;
    padding: 20px;
}

#전체 .첫째자식 .첫째손자 {
    background-color: darkmagenta;
    height: 200px;
    background-image: url(../img/img1.jpg);
    /* 한 단계 더 올라가서 부를때는 ../, 자식을 부를때는 / */
    background-size: cover;
    background-position: center; /* 위치 가운데 */
}

#전체 .첫째자식 .wrap{
    position: relative; /* 아무 영향을 주지 않고 첫손2의 위치를 잡아주는 역할 */
}

#전체 .첫째자식 .첫손2 {
    background-color: green;
    opacity: 0; /* 0.5=투명도 50%, 0=투명 */
    position: absolute; /* 자식이 없어졌다고 생각해서 부모인 첫째자식의 입장에서는 첫째손자1의 높이만을 따라감, absolute되었기 때문에 잡아줄 수 있는 부모-조부모-조상의 위치를 따라가야함 형제는 잡아줄 수 없음
    //absolute되었을때는 부모의 패딩값을 인식하지 않고 제일 첫 위치에 붙게됨*/
    left: 0; top: 0;
    width: 100%; /* absolute되고 나서는 부모의 넓이를 따라가지 못하여(부모-자식 사이 상실)넓이 재설정 필요 */
    transition: 0.3s;
    background-image: url(../img/img2.jpg); /* 호버 시 변경을 위해 배경 바꿔주기 */
}

#전체 .첫째자식:hover .첫손2 {
    opacity: 1; /* 첫째자식에 호버하면 첫손2가 보여진다 */
}

#전체 .둘째자식{
    margin-top: 30px;
    height: 200px;
    padding: 20px; /* 높이가 200px에 padding 20으로 높이가 현재 240px인것 */
    /* width: 500px 넓이가 따로 설정되어 있지 않고 부모 넓이의 100%가 됐을때는 패딩이 박스사이즈에 포함하게 되어있어서 box-sizing을 하더라도 넓이가 따로 줄어들거나 하지 않음, 기본으로 설정되어있는 값, 기본적으로 넓이는 다 차지하도록 설정되어있다 box-sixing은 높이만 반응, 추가 설정주지 않은 기본 넓이에는 반응x 줄었다 늘어났다 하지않음 */
    background-color: lawngreen;
    box-sizing: border-box; /* 사이즈 안에 선이랑 패딩이랑 다 포함되게 */
    position: relative;
}

#전체 .둘째자식 .둘째손자{
    background-color: indigo;
    /* width: 100%; /* 안적더라도 기본값, block요소이기 때문 부모 넓이의 100% 차지 */
    /* height: 100%; /* 부모의 높이값을 100% 차지해라, 부모의 높이값이 설정되어 있을때 가능, 자식은 부모의 padding에 침범하지 못한다 */
    position: absolute; /* 유령이되었기 때문에 둘째자식에게 매달리기 */
    left: 0; top: 0; /* 나의 왼쪽을 부모로부터 10px 떨어뜨리겠다 */
    /* position: absolute시 부모가 가지고 있는 패딩값을 침범해 원래 값에 붙어버림 ex)부모의 패딩값이 20px일 경우 패딩값을 반영하지 못하고 0,0에 붙어버림*/

    /* position: absolute일때
    left: 0; top: 0; 부모의 넓이 100%, 높이 100%라는 뜻
    right: 0; bottom: 0;
    width: 200px; 따로 값을 정해준 경우
    height: 100px; */
}

#전체 .둘째자식{
    margin-bottom: 50px;
}

#전체 .셋째자식{
    margin-top: 30px; /* 위아래 마진은 둘중에 큰값으로 반영된다 위아래 값 중복반영X, 좌우는 각각의 값을 더하여 모두 포함시킴
    ex) top 30 bottom 50이면 50만 적용(같은 값일때는 하나만 적용), left 30 right 30이면 마진은 총 60 */
    background-color: #C780FA;

}
#전체 .셋째자식>div{
    background-color: #B5D5C5;
    width: 40%;
    margin: 0 5%; /* 상하0 좌우 5% */
    float: left;
}

/* ol, ul의 자식요소는 li만 가능하다 */

#전체 .셋째자식>div ol{
    list-style-type: upper-roman;
}
#전체 .셋째자식>div ul{
    list-style-type: circle;
}

#전체 .셋째자식>div li{
    border: 1px solid gray;
} /* 자식에 있는 모든 li에 해당 */

#전체 .넷째자식{
    background-color: darkseagreen;
    margin-top: 30px;
    padding: 20px;
}

#전체 .넷째자식 .넷째손자{
    background-color: #EAC7C7;
}

#전체 .넷째자식 .넷째손자 dt{
    background-color: #A8E890;}
#전체 .넷째자식 .넷째손자 dd{
    background-color: #D09CFA;
}